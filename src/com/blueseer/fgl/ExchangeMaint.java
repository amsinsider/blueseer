/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.blueseer.fgl;

import bsmf.MainFrame;
import com.blueseer.utl.OVData;
import static bsmf.MainFrame.reinitpanels;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author vaughnte
 */
public class ExchangeMaint extends javax.swing.JPanel {

    
     javax.swing.table.DefaultTableModel exchangemodel = new javax.swing.table.DefaultTableModel(new Object[][]{},
            new String[]{
                "BaseCurrency", "ForeignCurrency", "Rate"
            });
    
    /**
     * Creates new form CarrierMaintPanel
     */
    public ExchangeMaint() {
        initComponents();
    }

    public void getRates() {
        
        try {

            Class.forName(bsmf.MainFrame.driver).newInstance();
            bsmf.MainFrame.con = DriverManager.getConnection(bsmf.MainFrame.url + bsmf.MainFrame.db, bsmf.MainFrame.user, bsmf.MainFrame.pass);
            try {
                Statement st = bsmf.MainFrame.con.createStatement();
                ResultSet res = null;
                int i = 0;
                res = st.executeQuery("select * from exc_mstr ;");
                while (res.next()) {
                exchangemodel.addRow(new Object[]{res.getString("exc_base"), res.getString("exc_foreign"), res.getString("exc_rate")}); 
                }
               
                 if (i > 0) {
                    enableAll();
                    tbbasecode.setEnabled(false);
                    btadd.setEnabled(false);
                }

            } catch (SQLException s) {
                MainFrame.bslog(s);
                bsmf.MainFrame.show("Unable to retrieve exc_mstr");
            }
            bsmf.MainFrame.con.close();
        } catch (Exception e) {
            MainFrame.bslog(e);
        }

    }
    
    public void enableAll() {
        // tbbasecode.setEnabled(true);  //leave disabled
        ddforeign.setEnabled(true);
        tbrate.setEnabled(true);
        btadd.setEnabled(true);
        btupdate.setEnabled(true);
        btdelete.setEnabled(true);
      
        
    }
    
    public void disableAll() {
        tbbasecode.setEnabled(false);
       ddforeign.setEnabled(false);
        tbrate.setEnabled(false);
        btadd.setEnabled(false);
        btupdate.setEnabled(false);
        btdelete.setEnabled(false);
        
    }
    
    public void clearAll() {
      tbbasecode.setText("");
        tbrate.setText("");
      
    }
    
      public void initvars(String arg) {
          clearAll();
          disableAll();
          exchangemodel.setRowCount(0);
          ratetable.setModel(exchangemodel);
          tbbasecode.setText(OVData.getDefaultCurrency());
          ddforeign.removeAllItems();
           ArrayList<String> foreign_curr = OVData.getCurrlist();
           for (String fc : foreign_curr) {
               if (! tbbasecode.getText().toUpperCase().equals(fc.toUpperCase())) {  // do not add base currency
               ddforeign.addItem(fc);
               }
           }
          enableAll();
          getRates();
          
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btdelete = new javax.swing.JButton();
        btadd = new javax.swing.JButton();
        btupdate = new javax.swing.JButton();
        tbbasecode = new javax.swing.JTextField();
        ddforeign = new javax.swing.JComboBox<>();
        tbrate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ratetable = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 102, 204));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Exchange Rate Maintenance"));

        jLabel1.setText("Base Code:");

        jLabel2.setText("Foreign Code:");

        btdelete.setText("delete");
        btdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btdeleteActionPerformed(evt);
            }
        });

        btadd.setText("add");
        btadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btaddActionPerformed(evt);
            }
        });

        btupdate.setText("update");
        btupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btupdateActionPerformed(evt);
            }
        });

        jLabel3.setText("Rate:");

        ratetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        ratetable.setEnabled(false);
        jScrollPane1.setViewportView(ratetable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tbrate)
                            .addComponent(tbbasecode, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(ddforeign, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btadd, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btupdate, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btdelete, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(34, 34, 34))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbbasecode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btadd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ddforeign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btupdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(btdelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void btaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btaddActionPerformed
       try {

            Class.forName(bsmf.MainFrame.driver).newInstance();
            bsmf.MainFrame.con = DriverManager.getConnection(bsmf.MainFrame.url + bsmf.MainFrame.db, bsmf.MainFrame.user, bsmf.MainFrame.pass);
            try {
                Statement st = bsmf.MainFrame.con.createStatement();
                ResultSet res = null;
                boolean proceed = true;
                int i = 0;
               
                
                Pattern p = Pattern.compile("^[0-9]\\d*(\\.\\d+)?$");
                Matcher m = p.matcher(tbrate.getText());
                if (!m.find() || tbrate.getText() == null) {
                  bsmf.MainFrame.show("Invalid Rate format");
                  proceed = false;
                  return;
                }
                
                if (proceed) {

                    res = st.executeQuery("SELECT * FROM  exc_mstr where exc_base = " + "'" + tbbasecode.getText() + "'" + 
                                          " AND exc_foreign = " + "'" + ddforeign.getSelectedItem().toString() + "'"  +  ";");
                    while (res.next()) {
                        i++;
                    }
                    if (i == 0) {
                        st.executeUpdate("insert into exc_mstr "
                            + "(exc_base, exc_foreign, exc_rate) "
                            + " values ( " + "'" + tbbasecode.getText().toString().toUpperCase() + "'" + ","
                            + "'" + ddforeign.getSelectedItem().toString() + "'" + ","
                            + "'" + tbrate.getText() + "'" 
                            + ")"
                            + ";");
                        bsmf.MainFrame.show("Added Exchange Record");
                    } else {
                        bsmf.MainFrame.show("Exchange Record Already Exists");
                    }

                   initvars("");
                   
                } // if proceed
            } catch (SQLException s) {
                MainFrame.bslog(s);
                bsmf.MainFrame.show("Unable to Add to exc_mstr");
            }
            bsmf.MainFrame.con.close();
        } catch (Exception e) {
            MainFrame.bslog(e);
        }
    }//GEN-LAST:event_btaddActionPerformed

    private void btupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btupdateActionPerformed
       try {
            boolean proceed = true;
            ResultSet res = null;
            int i = 0;
            Class.forName(bsmf.MainFrame.driver).newInstance();
            bsmf.MainFrame.con = DriverManager.getConnection(bsmf.MainFrame.url + bsmf.MainFrame.db, bsmf.MainFrame.user, bsmf.MainFrame.pass);
            try {
                Statement st = bsmf.MainFrame.con.createStatement();
                   
                Pattern p = Pattern.compile("^[0-9]\\d*(\\.\\d+)?$");
                Matcher m = p.matcher(tbrate.getText());
                if (!m.find() || tbrate.getText() == null) {
                  bsmf.MainFrame.show("Invalid Rate format");
                  proceed = false;
                  return;
                }
                
                if (proceed) {
                    
                    res = st.executeQuery("SELECT * FROM  exc_mstr where exc_base = " + "'" + tbbasecode.getText() + "'" + 
                                          " AND exc_foreign = " + "'" + ddforeign.getSelectedItem().toString() + "'"  +  ";");
                    while (res.next()) {
                        i++;
                    }
                    
                    if (i == 0) {
                        bsmf.MainFrame.show("Exchange record does not exist...must add");
                        return;
                    } else {
                    
                    st.executeUpdate("update exc_mstr set exc_rate = " + "'" + tbrate.getText() + "'" 
                            + " where exc_base = " + "'" + tbbasecode.getText() + "'"  
                            + " and exc_foreign = " + "'" + ddforeign.getSelectedItem().toString() + "'"
                            + ";");
                    bsmf.MainFrame.show("Updated Exchange Record");
                    initvars("");
                    }
                } 
         
            } catch (SQLException s) {
                MainFrame.bslog(s);
                bsmf.MainFrame.show("Problem updating exc_mstr");
            }
            bsmf.MainFrame.con.close();
        } catch (Exception e) {
            MainFrame.bslog(e);
        }
    }//GEN-LAST:event_btupdateActionPerformed

    private void btdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btdeleteActionPerformed
          try {

            Class.forName(bsmf.MainFrame.driver).newInstance();
            bsmf.MainFrame.con = DriverManager.getConnection(bsmf.MainFrame.url + bsmf.MainFrame.db, bsmf.MainFrame.user, bsmf.MainFrame.pass);
            try {
                Statement st = bsmf.MainFrame.con.createStatement();
              
                   int i = st.executeUpdate("delete from exc_mstr " 
                            + " where exc_base = " + "'" + tbbasecode.getText() + "'"  
                            + " and exc_foreign = " + "'" + ddforeign.getSelectedItem().toString() + "'"
                            + ";"); 
                    if (i > 0) {
                    bsmf.MainFrame.show("deleted exchange rate");
                    initvars("");
                    }
                } catch (SQLException s) {
                    MainFrame.bslog(s);
                bsmf.MainFrame.show("Unable to Delete Exchange Record");
            }
            bsmf.MainFrame.con.close();
        } catch (Exception e) {
            MainFrame.bslog(e);
        }
    }//GEN-LAST:event_btdeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btadd;
    private javax.swing.JButton btdelete;
    private javax.swing.JButton btupdate;
    private javax.swing.JComboBox<String> ddforeign;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable ratetable;
    private javax.swing.JTextField tbbasecode;
    private javax.swing.JTextField tbrate;
    // End of variables declaration//GEN-END:variables
}
